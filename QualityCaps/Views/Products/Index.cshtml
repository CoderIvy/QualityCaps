@model PaginatedList<QualityCaps.Models.Cap>

@{
    ViewData["Title"] = "Index";
}

<h2 class="text-center"> <strong>Products List</strong></h2>
<br />


<div class="col-md-offset-3 col-md-9" style="text-align:right">
    <form asp-action="Index" method="get">
        <div class="form-actions no-color">
            <p>
                <input type="text" style="width:200px;" name="SearchString" placeholder="Find by name" value="@ViewData["currentFilter"]" />
                <input type="submit" value="Search" class="btn btn-default" /> |
                <a class="btn btn-default" href="~/Products">Back to Full List</a>
            </p>
        </div>
    </form>
    <br /><br />

</div>

@{
    var categories = (List<Category>)ViewData["Categories"]; // Cast the list
}
<div class="container">

    <div class="col-md-3">
        <div class="list-group" id="categories">
            <a class="list-group-item" href="~/Products">All Categories</a>

            @foreach (var item in categories)
            {
                <a class="list-group-item" asp-action="Index" asp-route-categoryId=@item.CategoryID>@item.CategoryName</a>
            }
          
        </div>
    </div>



    <div class="col-md-9">
        <table class="table">

            <tbody>
                @foreach (var item in Model)
                {
                    <tr class="col-md-3 text-center">
                        <td>
                            <img width="120" height="110" src=@Html.DisplayFor(modelItem => item.Image) />  <br />

                            @Html.DisplayFor(modelItem => item.CapName)
                            <br />

                            @Html.DisplayFor(modelItem => item.Price)
                            <br /> <br />

                            <a asp-action="AddToCart" asp-controller="ShoppingCart" asp-route-id="@item.CapID" class="btn btn-default center-block">Add to cart</a>
                            <br />
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <!--previous and next button-->
        @{
            var preVDisabled = !Model.HasPreviousPage ? "disabled" : "";
            var nextDisabled = !Model.HasNextPage ? "disabled" : "";
        }
        <div class="col-md-10">
            <a asp-action="Index"
               asp-route-page="@(Model.PageIndex -1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="btn btn-default @preVDisabled">
                Previous
            </a>
        </div>
        <div class="col-md-1">
            <a asp-action="Index"
               asp-route-page="@(Model.PageIndex + 1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="btn btn-default @nextDisabled">
                Next
            </a>
        </div>
    </div>
</div>

